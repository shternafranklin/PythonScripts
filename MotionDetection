import cv2, time, pandas
from datetime import datetime


video=cv2.VideoCapture(0 + cv2.CAP_DSHOW)

#assign it nothing so python wont throw an error
first_frame = None
status_list  = [None, None]
times = []
df = pandas.DataFrame(columns["start", "end"])


while True:
    _, frame = video.read()

    
    status = 0
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    gray=cv2.GaussianBlur(gray, (21, 21),0)

    if first_frame is None:
        first_frame = gray
        #Continue = go to the beginning of the loop and do not finish
        continue

        #Now calculate the first grame and the second frame
        #this will give us anoter image
    delta_frame=cv2absdiff(first_frame, gray)


        #compare the delta
    thresh_frame=cv2.threshold(delta_frame, 30, 255, cv2.THRESH_BINARY[1])

        #change frame
    thresh_frame = cv2.dilate(thresh_frame, None, iteration=2)

        #find contours
    (_,cnts,_) = cv2.findContours(thresh_frame.copy(), cv.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

        #filter out contours
    for contour in cnts:
        if cv2.conterArea(contour) < 10000:
            continue
        status = 1

        (x,y,w,h) = cv2.boundingRect(contour)
        cv2.rectangle(frame, (x,y), (x+w, y+h), (0,255,0), 3)

    status_list.append(status)
    if status_list[-1] ==1 and status_list[-2] ==0:
        times.append(datetime.now())
    if status_list[-1] ==0 and status_list[-2] ==1:
        times.append(datetime.now())


    cv2.imshow('Input', gray)
    cv2.imshow('delta_frame', delta_frame)
    cv2.imshow('thresh_frame', thresh_frame)
    cv2.imshow('color frame', frame)

    key = cv2.waitKey(1)
    if key == ord('q'):
        if status ==1:
            times.append(datetime.now())
        break

print(status_list)
print(times)

for i in range(0, len(times),2):
    df = df.append({"start":: times[i], "end": times [i +1]}, ignore_index = True)

df.to_csv("files.csv")

video.release()
cv2.destroyAllWindows()
